#include <iostream>
#include <list>
#include <string>
#include <set>
class A {
    public:
        virtual int value() { return 1;}
};

class B : public A {
    public:
        int value() { return 2;}
};

class C {
    public:
        int val() {
            return 1;
        }
        int val(int t) {
            return t+1;
        }
};
int fun1() {
    return 0;
}
int fun2() {
    return 0;
}


int main() {
    if(fun1() && fun2()) {
        std::cout<<"main\n";
    }
    // C objq;
    // std::cout<<objq.val()<<"\n";

    // A *obj = new B();
    // int val = obj->value();

    // std::list<int> coll;
    // std::list<int>::iterator it = coll.begin();
    // std::cout<<val<<"\n";

    // int a = 1;
    // int b = 2;
    // if(a = b) {
    //     std::cout<<"Hello";
    // } else {
    //     std::cout<<"Hellovv";
    // }

    // int i =0;
    // std::cout<<i++<<"\n";

    // char arr[10] = {'a', 'b', 'c'};
    // std::cout<<sizeof(arr)<<"\n";

    // int x = 1;
    // int y = 1;

    // int *px = &x;
    // int *py = &y;

    // std::cout<<(px == py)<<"\n";
    // int i = 1;
    // int i1 = 10;
    // std::cout<<(i/i1)<<"\n";
    std::set<int> st;
    st.insert(2);
    st.insert(0);
    st.insert(2);
    st.insert(0);
    std::cout<<st.size()<<"\n";
}